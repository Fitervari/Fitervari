//
// Device.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Device: Codable, Hashable {

    public var id: String?
    public var name: String
    public var description: String
    public var studio: Int?
    public var group: DeviceGroup

    public init(id: String? = nil, name: String, description: String, studio: Int? = nil, group: DeviceGroup) {
        self.id = id
        self.name = name
        self.description = description
        self.studio = studio
        self.group = group
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case description
        case studio
        case group
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encode(name, forKey: .name)
        try container.encode(description, forKey: .description)
        try container.encodeIfPresent(studio, forKey: .studio)
        try container.encode(group, forKey: .group)
    }
}

